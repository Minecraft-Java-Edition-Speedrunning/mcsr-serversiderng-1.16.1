package me.voidxwalker.serversiderng.mixin.rng_verification.dragon;

import me.voidxwalker.serversiderng.RNGHandler;
import me.voidxwalker.serversiderng.ServerSideRNG;
import net.minecraft.entity.boss.dragon.EnderDragonEntity;
import net.minecraft.entity.boss.dragon.phase.HoldingPatternPhase;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;
import org.spongepowered.asm.mixin.injection.Slice;

import java.util.Random;
import java.util.function.Supplier;

@Mixin(HoldingPatternPhase.class)
public class HoldingPatternPhaseMixin {
    /**
     * Uses the from {@link ServerSideRNG#getRngContext(RNGHandler.RNGTypes)} obtained random {@code Long}, that has been generated by the {@code Verification-Server}, as a seed for the {@link RNGHandler.RNGTypes#ENDER_DRAGON_LANDING_APPROACH} RNG.
     * @see ServerSideRNG#getRngContext(RNGHandler.RNGTypes)
     * @author Void_X_Walker
     */
    @Redirect(method = "method_6841", at = @At(value = "INVOKE", target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;getRandom()Ljava/util/Random;"),
            slice = @Slice(
                    from = @At(value = "INVOKE", target = "Lnet/minecraft/world/World;getTopPosition(Lnet/minecraft/world/Heightmap$Type;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;"),
                    to = @At(value = "INVOKE", target = "Lnet/minecraft/world/World;getClosestPlayer(Lnet/minecraft/entity/ai/TargetPredicate;DDD)Lnet/minecraft/entity/player/PlayerEntity;")
            )
    )
    public Random modifyDragonLandingPhase(EnderDragonEntity instance) {
        return ServerSideRNG
            .getRngContext(RNGHandler.RNGTypes.ENDER_DRAGON_LANDING_APPROACH)
            .map(Supplier::get)
            .map(Random::new)
            .orElse(instance.getRandom());
    }
    /**
     * Uses the from {@link ServerSideRNG#getRngContext(RNGHandler.RNGTypes)} obtained random {@code Long}, that has been generated by the {@code Verification-Server}, as a seed for the {@link RNGHandler.RNGTypes#ENDER_DRAGON_PATH} RNG.
     * @see ServerSideRNG#getRngContext(RNGHandler.RNGTypes)
     * @author Void_X_Walker
     */
    @Redirect(method = "method_6841", at = @At(value = "INVOKE", target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;getRandom()Ljava/util/Random;"),
            slice = @Slice(
                    from = @At(value = "INVOKE", target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;getNearestPathNodeIndex()I"),
                    to = @At(value = "INVOKE", target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;findPath(IILnet/minecraft/entity/ai/pathing/PathNode;)Lnet/minecraft/entity/ai/pathing/Path;")
            )
    )
    public Random modifyDragonPath(EnderDragonEntity instance) {
        return ServerSideRNG
                .getRngContext(RNGHandler.RNGTypes.ENDER_DRAGON_PATH)
                .map(Supplier::get)
                .map(Random::new)
                .orElse(instance.getRandom());
    }
    /**
     * Uses the from {@link ServerSideRNG#getRngContext(RNGHandler.RNGTypes)} obtained random {@code Long}, that has been generated by the {@code Verification-Server}, as a seed for the {@link RNGHandler.RNGTypes#ENDER_DRAGON_TARGET_HEIGHT} RNG.
     * @see ServerSideRNG#getRngContext(RNGHandler.RNGTypes)
     * @author Void_X_Walker
     */
    @Redirect(method = "method_6842",at = @At(value = "INVOKE",target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;getRandom()Ljava/util/Random;"))
    public Random modifyTargetHeight(EnderDragonEntity instance) {
        return ServerSideRNG
            .getRngContext(RNGHandler.RNGTypes.ENDER_DRAGON_TARGET_HEIGHT)
            .map(Supplier::get)
            .map(Random::new)
            .orElse(instance.getRandom());
    }
}
