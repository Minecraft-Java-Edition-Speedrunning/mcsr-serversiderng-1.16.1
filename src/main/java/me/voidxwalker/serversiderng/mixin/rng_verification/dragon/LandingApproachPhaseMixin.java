package me.voidxwalker.serversiderng.mixin.rng_verification.dragon;

import me.voidxwalker.serversiderng.RNGHandler;
import me.voidxwalker.serversiderng.ServerSideRNG;
import net.minecraft.entity.boss.dragon.EnderDragonEntity;
import net.minecraft.entity.boss.dragon.phase.LandingApproachPhase;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;

import java.util.Random;
import java.util.function.Supplier;

@Mixin(LandingApproachPhase.class)
public class LandingApproachPhaseMixin {
    /**
     * Uses the from {@link ServerSideRNG#getRngContext(RNGHandler.RNGTypes)} obtained random {@code Long}, that has been generated by the {@code Verification-Server}, as a seed for the {@link RNGHandler.RNGTypes#ENDER_DRAGON_TARGET_HEIGHT} RNG.
     *@return A {@code Random} generated with a seed obtained by the verification or the vanilla {@code Random} if {@code ServerSideRNG} is not in a session
     *  @see ServerSideRNG#getRngContext(RNGHandler.RNGTypes)
     * @author Void_X_Walker
     */
    @Redirect(method = "method_6845", at = @At(value = "INVOKE", target = "Lnet/minecraft/entity/boss/dragon/EnderDragonEntity;getRandom()Ljava/util/Random;"))
    public Random serversiderng_modifyTargetHeight(EnderDragonEntity instance) {
        return ServerSideRNG
            .getRngContext(RNGHandler.RNGTypes.ENDER_DRAGON_TARGET_HEIGHT,null)
            .map(Supplier::get)
            .map(Random::new)
            .orElse(instance.getRandom());
    }
}
